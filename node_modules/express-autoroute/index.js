var loader = require('./lib/loader');
var path = require('path');
var fs = require('fs');

var allRoutes = [];
var allRoutesInfo = [];

module.exports = function () {
    var routesDir = __dirname + "/../../router";
    readdir(routesDir);
};

function loadFile(filePath) {
    var routeObj = require(filePath);

    //如果包含autoroute属性，则进行解析
    if (routeObj.autoroute) {
        for (var method in routeObj.autoroute) {
            var routeList = routeObj.autoroute[method];
            if (!routeList) {
                break;
            }

            for (var routeRule in routeList) {
                //func获取得到的就是上面对应各项的处理函数
                var func = routeList[routeRule];
                if (func != undefined) {
                    allRoutes.push(routeRule);
                    if (!func.middleWare) {
                        allRoutesInfo.push({method: method, routeRule: routeRule, func: func});
                    }
                    else {
                        allRoutesInfo.push({
                            method: method,
                            routeRule: routeRule,
                            middleWare: func.middleWare,
                            func: func.func
                        });
                    }
                }
            }
        }
    }
}


function readdir(routesDir) {
    var files = fs.readdirSync(routesDir);

    files.forEach(function (path) {
        //routes目录下的文件路径
        var filePath = routesDir + "/" + path;
        var stats = fs.statSync(filePath);

        if (stats.isDirectory()) {
            //递归执行函数
            readdir(filePath);
        } else {
            //加载文件并解析
            loadFile(filePath);
        }
    });

    global.routes = allRoutes;
    global.allRoutesInfo = allRoutesInfo;
}
